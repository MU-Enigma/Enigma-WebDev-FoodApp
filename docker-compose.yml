version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: food-app-postgres
    environment:
      POSTGRES_USER: foodapp
      POSTGRES_PASSWORD: foodapp_pass
      POSTGRES_DB: fooddb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/go-api/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: food-app-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./services/go-api
      dockerfile: Dockerfile
    container_name: food-app-api
    environment:
      DATABASE_URL: "postgres://foodapp:foodapp_pass@postgres:5432/fooddb?sslmode=disable"
      REDIS_ADDR: "redis:6379"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8080
    container_name: food-app-frontend
    ports:
      - "80:80"
    depends_on:
      - api

volumes:
  postgres_data:
